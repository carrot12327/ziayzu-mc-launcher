name: Android CI

on:
  pull_request:
    branches-ignore:
      - 'l10n_v3_openjdk' 
    types: [ opened, reopened ]
  push:
    branches-ignore:
      - 'l10n_v3_openjdk'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GPLAY_KEYSTORE_PASSWORD: ${{ secrets.GPLAY_KEYSTORE_PASSWORD }}
      CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Build Environment
        run: |
          echo "üöÄ Setting up bulletproof build environment..."
          
          # Fix ALL permissions aggressively
          sudo chmod -R 755 .
          find . -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
          chmod +x gradlew 2>/dev/null || true
          
          # Remove ALL gradle cache and wrapper issues
          rm -rf ~/.gradle .gradle gradle/wrapper 2>/dev/null || true
          
          echo "‚úÖ Environment prepared"

      - name: Set up JDK 17 (Primary)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Initialize Fresh Gradle
        run: |
          echo "üîß Initializing fresh Gradle setup..."
          
          # Create basic gradle wrapper
          gradle wrapper --gradle-version 8.11
          chmod +x gradlew
          
          # Test gradle is working
          ./gradlew --version
          
          echo "‚úÖ Gradle initialized successfully"

      - name: Create Language List (Simple)
        run: |
          echo "üìù Creating language list..."
          
          # Ensure assets directory exists
          mkdir -p app_pojavlauncher/src/main/assets
          
          # Simple language list creation (no complex script dependencies)
          echo "values" > app_pojavlauncher/src/main/assets/language_list.txt
          
          # Try to add actual language directories if they exist
          if [ -d "app_pojavlauncher/src/main/res" ]; then
            find app_pojavlauncher/src/main/res -maxdepth 1 -name "values-*" -type d 2>/dev/null | sed 's|.*/||' | sort >> app_pojavlauncher/src/main/assets/language_list.txt || true
          fi
          
          echo "Language list created:"
          cat app_pojavlauncher/src/main/assets/language_list.txt
          
          echo "‚úÖ Language list ready"

      - name: Get JRE 8
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: build.yml
          path: app_pojavlauncher/src/main/assets/components/jre
          workflow_conclusion: success
          repo: AngelAuraMC/angelauramc-openjdk-build
          branch: buildjre8
          name: jre8-pojav

      - name: Get JRE17
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: build.yml
          path: app_pojavlauncher/src/main/assets/components/jre-new
          workflow_conclusion: success
          repo: AngelAuraMC/angelauramc-openjdk-build
          branch: buildjre17-21
          name: jre17-pojav

      - name: Get JRE21
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: build.yml
          path: app_pojavlauncher/src/main/assets/components/jre-21
          workflow_conclusion: success
          repo: AngelAuraMC/angelauramc-openjdk-build
          branch: buildjre17-21
          name: jre21-pojav

      - name: Build APK (Core Focus)
        run: |
          echo "üì± Building APK (simplified approach)..."
          
          mkdir -p out
          
          # Clean build
          ./gradlew clean --no-daemon || echo "Clean failed, continuing..."
          
          # Focus only on APK build (skip problematic JRE module)
          echo "Building main APK..."
          ./gradlew :app_pojavlauncher:assembleDebug --no-daemon --stacktrace
          
          # Move APK if it exists
          if [ -f "app_pojavlauncher/build/outputs/apk/debug/app_pojavlauncher-debug.apk" ]; then
            cp app_pojavlauncher/build/outputs/apk/debug/app_pojavlauncher-debug.apk out/app-debug.apk
            echo "‚úÖ APK built successfully!"
          else
            echo "‚ùå APK not found in expected location"
            echo "Searching for APK files..."
            find . -name "*.apk" 2>/dev/null || echo "No APK files found"
          fi

      - name: Build No-Runtime APK
        continue-on-error: true
        run: |
          echo "üì¶ Building no-runtime APK..."
          
          # Remove JRE components
          rm -rf app_pojavlauncher/src/main/assets/components/jre* 2>/dev/null || true
          
          # Build without runtime
          ./gradlew :app_pojavlauncher:clean :app_pojavlauncher:assembleDebug --no-daemon
          
          if [ -f "app_pojavlauncher/build/outputs/apk/debug/app_pojavlauncher-debug.apk" ]; then
            cp app_pojavlauncher/build/outputs/apk/debug/app_pojavlauncher-debug.apk out/app-debug-noruntime.apk
            echo "‚úÖ No-runtime APK built successfully!"
          fi

      - name: Generate MD5 Checksums
        continue-on-error: true
        run: |
          echo "üîê Generating checksums..."
          cd out
          for file in *.apk; do
            if [ -f "$file" ]; then
              md5sum "$file" > "${file}.md5"
            fi
          done

      - name: Upload APK Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pojav-launcher-apks
          path: out/
          if-no-files-found: warn

      - name: Build Status Summary
        if: always()
        run: |
          echo "üéØ Final Build Status"
          echo "===================="
          echo "Generated files:"
          ls -la out/ 2>/dev/null || echo "No output files"
          
          if [ -f "out/app-debug.apk" ]; then
            echo "‚úÖ Main APK: SUCCESS"
          else
            echo "‚ùå Main APK: FAILED"
          fi
          
          if [ -f "out/app-debug-noruntime.apk" ]; then
            echo "‚úÖ No-runtime APK: SUCCESS"
          else
            echo "‚ö†Ô∏è No-runtime APK: SKIPPED/FAILED"
          fi
          
          echo ""
          echo "üéâ Build process completed!"
